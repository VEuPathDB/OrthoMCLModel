<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>

    <!-- parameters used by primary key queries -->

    <paramSet name="sharedParams">

      <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
      <!-- Begin text search params -->
      <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

      <stringParam name="text_expression"
                   prompt="Text term (use * as wildcard)" number="false" length="1000">
        <help>
          Enter the word or phrase that you wish to query.  Use an asterisk
          as a wildcard to match partial words.  Use quotation marks around
          multiple words to match the exact phrase.
        </help>
        <suggest default="synth*"/>
      </stringParam>

      <stringParam name="document_type" visible="false" number="false" readonly="true">
        <noTranslation value="true"/>
      </stringParam>

      <flatVocabParam name="text_fields"
          queryRef="SharedVQ.SolrTextFieldsVocab"
          prompt="Fields"
          multiPick="true"
          dependedParamRef="sharedParams.document_type">
        <help>Choose which text fields to search.</help>
        <suggest selectMode="all"/>
        <noTranslation value="true"/>

      </flatVocabParam>

      <!-- old text search parameters

      <stringParam name="text_expression"
                   prompt="Text terms (use * as wildcard)" number="false">
          <help>Enter text you would like to search for. Multiple words may be entered, for example: "membrane receptor signal inner". Use an asterisk as a wildcard to match partial words.</help>
          <suggest default="synth*"/>
         <regex>.*[^*].*</regex>
      </stringParam>

      <stringParam name="wdk_record_type"
                   visible="false" number="false">
      </stringParam>

      <stringParam name="detail_table"
                   visible="false" number="false">
      </stringParam>

      <stringParam name="primary_key_column"
                   visible="false" number="false">
      </stringParam>

      <stringParam name="project_id"
                   visible="false" number="false">
      </stringParam>
      -->

      <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
      <!-- End text search params -->
      <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <stringParam name="keyword" prompt="Keyword" number="false">
            <help>You can use boolean terms in search keyword.</help>
            <suggest default="kinase" />
        </stringParam>

         <flatVocabParam name="pfam_id_type_ahead"
                     queryRef="SharedVQ.PfamTypeAhead"
                     prompt="Pfam ID or Name"
                     displayType="typeAhead">
            <help>Start typing and then choose a domain from the list. As you type the list narrows to the entries that match what you have typed.</help>
        </flatVocabParam>


         <flatVocabParam name="ec_number_type_ahead"
                     queryRef="SharedVQ.EcNumberTypeAhead"
                     prompt="EC Number or Name"
                     displayType="typeAhead">
          <help>
            <![CDATA[
              Enzyme Commission numbers describe enzymes hierarchically by the class of reactions they catalyze.  
              Begin typing an EC number or name to 
              see a list of all possible EC categories that match what you have typed. Then choose an EC category from 
              the list. Use '-' as a wildcard in place of numbers to denote partial EC Numbers.
            ]]>
          </help>
          <suggest selectMode="none" />
        </flatVocabParam>

        <answerParam name="group_answer" readonly="true">
            <recordClass ref="GroupRecordClasses.GroupRecordClass" />
        </answerParam>

        <answerParam name="sequence_answer" readonly="true">
            <recordClass ref="SequenceRecordClasses.SequenceRecordClass" />
        </answerParam>
 
        <flatVocabParam name="organism"
                      queryRef="SharedVQ.AllOrganisms"
                      displayType="treeBox"  
                      prompt="Organism"
                      multiPick="true">
            <help>
             Choose one or more organisms to search with the given motif
            </help>
            <suggest default="pfal"/>
        </flatVocabParam>

    </paramSet>

  <querySet name="SharedVQ" queryType="vocab" isCacheable="true">

        <sqlQuery name="AllOrganisms">
            <column name="term" />
            <column name="display" />
            <column name="parentTerm" />
            <column name="internal" />
            <sql>
                <![CDATA[ 
SELECT org.name_for_filenames AS display, org.orthomcl_abbrev AS term, org.orthomcl_abbrev AS internal, org.orthomcl_abbrev AS parentTerm
FROM apidb.Organism org
                ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="PfamTypeAhead">
            <column name="internal" />
            <column name="term" />
            <column name="display"/>
            <sql>
SELECT DISTINCT accession AS internal,
                       accession AS term,
                       accession || ' ' || description AS display,
                       description,
                       lower(description) AS lower_description
FROM ApidbTuning.DomainAssignment
ORDER BY lower_description
            </sql>
        </sqlQuery>

        <sqlQuery name="EcNumberTypeAhead">
            <column name="internal" />
            <column name="term" />
            <column name="display"/>
            <sql>
WITH RECURSIVE leaves AS (
    SELECT DISTINCT ec_number, description
    FROM apidbtuning.sequenceenzymeclass
),
recursive_enzyme_class AS (
    -- Anchor member
    SELECT 
        ec.ec_number, 
        ec.parent_id, 
        ec.enzyme_class_id, 
        se.description
    FROM sres.enzymeclass ec
    LEFT JOIN apidbtuning.sequenceenzymeclass se ON ec.ec_number = se.ec_number
    WHERE ec.ec_number IN (SELECT ec_number FROM leaves)

    UNION ALL

    -- Recursive member
    SELECT 
        ec.ec_number, 
        ec.parent_id, 
        ec.enzyme_class_id, 
        se.description
    FROM sres.enzymeclass ec
    JOIN recursive_enzyme_class rec ON rec.enzyme_class_id = ec.parent_id
    LEFT JOIN apidbtuning.sequenceenzymeclass se ON ec.ec_number = se.ec_number
)

-- Final selection with filtering for non-null display
SELECT *
FROM (
    SELECT 
        rec.ec_number AS term,
        rec.ec_number AS internal,
        rec.ec_number || ' (' || 
            CASE 
                WHEN rec.ec_number = '-.-.-.-' THEN 'Any Enzyme'
                ELSE rec.description
            END || ')' AS display
    FROM recursive_enzyme_class rec

    UNION

    SELECT 
        l.ec_number AS term,
        l.ec_number AS internal,
        l.ec_number || ' (' || l.description || ')' AS display
    FROM leaves l

    UNION

    SELECT 
        'N/A' AS term,
        'N/A' AS internal,
        'N/A' AS display
) AS all_rows
WHERE display IS NOT NULL
             </sql>
         </sqlQuery>

         <processQuery name="SolrTextFieldsVocab"
                processName="org.eupathdb.websvccommon.wsfplugin.solrsearch.EuPathSiteSearchVocabularyPlugin">
            <wsColumn name="internal" width="255"/>
            <wsColumn name="term" width="255"/>
            <wsColumn name="display" width="255"/>
        </processQuery>

    </querySet>



    <groupSet name="paramGroups">
        <group name="corePeripheralAdvancedParams" displayName="Advanced Parameters" displayType="ShowHide">
   <description>OrthoMCL contains two sets of genomes. A Core set of 150 genomes have been chosen as well annotated reference organisms that broadly represent the major branches of the tree of life. All of the additional non-core VEuPathDB organisms (pathogens, hosts, and vectors) are called Peripheral organisms, in some cases including multiple strains and genome assemblies for the same species. The search ranges below can be used to filter the number of proteins {taxa} in each orthogroup by the number of Core and Peripheral  (minimum and maximum) in each group.  The number of Core and Peripheral will sum to the number of all proteins {taxa} in the group.</description>
        </group>
    </groupSet>

</wdkModel>
