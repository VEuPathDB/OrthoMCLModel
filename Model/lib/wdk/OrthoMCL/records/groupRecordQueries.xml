<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>

    <!-- 
    Group Attribute Queries                                     
    -->
    
    <querySet name="GroupAttributes" queryType="attribute" isCacheable="false">

       <defaultTestParamValues>
            <paramValue name="group_name">OG6_101427</paramValue>
       </defaultTestParamValues>

        <testRowCountSql>
            SELECT count(*)
	    FROM apidb.OrthologGroup
        </testRowCountSql>


        <sqlQuery name="GroupAttrs">
            <column name="group_name"/>
            <column name="group_type"/>
            <column name="number_of_members"/>
            <column name="number_of_core_members"/>
            <column name="number_of_peripheral_members"/>
            <sql>
            <![CDATA[
SELECT 
  og.group_id AS group_name,
  CASE 
    WHEN og.is_residual = 1 THEN 'Residual'
    ELSE 'Core'
  END AS group_type,
  COALESCE(nm.number_of_members, 0) AS number_of_members,
  COALESCE(cm.number_of_core_members, 0) AS number_of_core_members,
  COALESCE(pm.number_of_peripheral_members, 0) AS number_of_peripheral_members
FROM apidb.orthologgroup og
LEFT JOIN (
  SELECT COUNT(aa_sequence_id) AS number_of_members, group_id
  FROM apidb.orthologgroupaasequence
  GROUP BY group_id
) nm ON og.group_id = nm.group_id
LEFT JOIN (
  SELECT COUNT(core.aa_sequence_id) AS number_of_core_members, group_id
  FROM (
    SELECT ogas.aa_sequence_id, ogas.group_id
    FROM apidb.organism og
    JOIN dots.externalaasequence deas ON deas.taxon_id = og.taxon_id
    JOIN apidb.orthologgroupaasequence ogas ON ogas.aa_sequence_id = deas.aa_sequence_id
    WHERE og.core_peripheral = 'core'

    UNION

    SELECT ogas.aa_sequence_id, ogas.group_id
    FROM apidb.organism og
    JOIN dots.aasequence das ON das.taxon_id = og.taxon_id
    JOIN apidb.orthologgroupaasequence ogas ON ogas.aa_sequence_id = das.aa_sequence_id
    WHERE og.core_peripheral = 'core'
  ) AS core
  GROUP BY group_id
) cm ON og.group_id = cm.group_id
LEFT JOIN (
  SELECT COUNT(peripheral.aa_sequence_id) AS number_of_peripheral_members, group_id
  FROM (
    SELECT ogas.aa_sequence_id, ogas.group_id
    FROM apidb.organism og
    JOIN dots.externalaasequence deas ON deas.taxon_id = og.taxon_id
    JOIN apidb.orthologgroupaasequence ogas ON ogas.aa_sequence_id = deas.aa_sequence_id
    WHERE og.core_peripheral = 'peripheral'

    UNION

    SELECT ogas.aa_sequence_id, ogas.group_id
    FROM apidb.organism og
    JOIN dots.aasequence das ON das.taxon_id = og.taxon_id
    JOIN apidb.orthologgroupaasequence ogas ON ogas.aa_sequence_id = das.aa_sequence_id
    WHERE og.core_peripheral = 'peripheral'
  ) AS peripheral
  GROUP BY group_id
) pm ON og.group_id = pm.group_id
      ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="MaxSequenceLength">
          <column name="group_name"/>
          <column name="max_length"/>
          <sql>
            <![CDATA[
              select group_name, max(length) AS max_length
              from ApidbTuning.SequenceAttributes
              group by group_name
            ]]>
          </sql>
        </sqlQuery>



        <sqlQuery name="CoreMinEvalue">
          <column name="group_name"/>
          <column name="core_min_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C'
      AND stat_type = 'min'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_min_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="Core25Evalue">
          <column name="group_name"/>
          <column name="core_25_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C'
      AND stat_type = '25 PCT'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_25_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="CoreMedianEvalue">
          <column name="group_name"/>
          <column name="core_median_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C'
      AND stat_type = 'median'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_median_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="Core75Evalue">
          <column name="group_name"/>
          <column name="core_75_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C'
      AND stat_type = '75 PCT'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_75_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="CoreMaxEvalue">
          <column name="group_name"/>
          <column name="core_max_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C'
      AND stat_type = 'max'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_max_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>


        <sqlQuery name="CorePeripheralMinEvalue">
          <column name="group_name"/>
          <column name="core_peripheral_min_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C+P'
      AND stat_type = 'min'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_peripheral_min_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="CorePeripheral25Evalue">
          <column name="group_name"/>
          <column name="core_peripheral_25_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C+P'
      AND stat_type = '25 PCT'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_peripheral_25_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="CorePeripheralMedianEvalue">
          <column name="group_name"/>
          <column name="core_peripheral_median_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C+P'
      AND stat_type = 'median'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_peripheral_median_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="CorePeripheral75Evalue">
          <column name="group_name"/>
          <column name="core_peripheral_75_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C+P'
      AND stat_type = '75 PCT'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_peripheral_75_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="CorePeripheralMaxEvalue">
          <column name="group_name"/>
          <column name="core_peripheral_max_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'C+P'
      AND stat_type = 'max'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS core_peripheral_max_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>


        <sqlQuery name="ResidualMinEvalue">
          <column name="group_name"/>
          <column name="residual_min_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'R'
      AND stat_type = 'min'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS residual_min_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="Residual25Evalue">
          <column name="group_name"/>
          <column name="residual_25_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'R'
      AND stat_type = '25 PCT'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS residual_25_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="ResidualMedianEvalue">
          <column name="group_name"/>
          <column name="residual_median_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'R'
      AND stat_type = 'median'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS residual_median_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="Residual75Evalue">
          <column name="group_name"/>
          <column name="residual_75_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'R'
      AND stat_type = '75 PCT'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS residual_75_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>

        <sqlQuery name="ResidualMaxEvalue">
          <column name="group_name"/>
          <column name="residual_max_evalue"/>
          <sql>
WITH selection AS (
    SELECT group_id, evalue
    FROM apidb.orthologgroupstats
    WHERE protein_subset = 'R'
      AND stat_type = 'max'
)
SELECT
    og.group_id AS group_name,
    s.evalue AS residual_max_evalue
FROM apidb.orthologgroup og
LEFT JOIN selection s ON og.group_id = s.group_id
          </sql>
        </sqlQuery>


        <sqlQuery name="Layout">
            <column name="group_name"/>
            <column name="layout"/>
            <sql>
            <![CDATA[
                select g.name AS group_name, l.layout
                from apidb.OrthologGroup g, apidbTuning.GroupLayout l
                where g.name = l.group_name(+)
                        ]]>
            </sql>
        </sqlQuery>

	<sqlQuery name="EcNumbers">
	  <column name="group_name" />
	  <column name="ec_numbers" />
	  <sql>
SELECT 
    og.group_id AS group_name, 
    ec.ec_numbers
FROM (
    SELECT 
        group_name, 
        string_agg(EC_NUMBER || '(' || ec_count || ')', ', ' ORDER BY ec_count DESC) AS ec_numbers
    FROM (
        SELECT 
            GROUP_NAME, 
            COUNT(*) AS ec_count, 
            EC_NUMBER
        FROM apidbtuning.sequenceenzymeclass
        GROUP BY GROUP_NAME, EC_NUMBER
    ) t
    GROUP BY group_name
) ec
RIGHT JOIN apidb.orthologgroup og ON og.group_id = ec.group_name
	  </sql>
	</sqlQuery>

	<sqlQuery name="Keywords">
	  <column name="group_name" />
	  <column name="keywords" />
	  <sql>
            <![CDATA[
SELECT og.group_id AS group_name, verbiage.keywords
FROM apidb.OrthologGroup og
LEFT JOIN (
    SELECT ortholog_group_id,
           string_agg(keyword, '; ' ORDER BY CAST(frequency AS NUMERIC) DESC) AS keywords
    FROM apidb.OrthomclGroupKeyword
    GROUP BY ortholog_group_id
) verbiage
ON og.group_id = verbiage.ortholog_group_id
            ]]>
	  </sql>
	</sqlQuery>

	<sqlQuery name="PreviousGroups">
	  <column name="group_name" />
	  <column name="previous_groups" />
	  <sql>
            <![CDATA[
WITH prevgps AS (
    SELECT new_group_id,
           COUNT(*) AS cnt,
           string_agg(CASE WHEN seqnum <= 6 THEN old_group_id END, ', ' ORDER BY old_group_id) AS prev_groups
    FROM (
        SELECT old_group_id, new_group_id,
               ROW_NUMBER() OVER (PARTITION BY new_group_id ORDER BY new_group_id) AS seqnum
        FROM apidb.groupMapping
    ) subquery
    GROUP BY new_group_id
)
SELECT og.group_id AS group_name,
       prev_groups || CASE WHEN cnt > 6 THEN '...   <a href="#previousGroups">(See all ' || cnt || ' groups)</a>' END AS previous_groups
FROM prevgps pg
LEFT JOIN apidb.orthologGroup og ON og.group_id = pg.new_group_id
            ]]>
	  </sql>
	</sqlQuery>


	<sqlQuery name="Domains">
	  <column name="group_name" />
	  <column name="descriptions" />
	  <sql>
            <![CDATA[
		     SELECT og.group_id as group_name, ga.descriptions
		     FROM apidbtuning.GroupDomainAttribute ga
                     RIGHT JOIN apidb.orthologGroup og ON og.group_id = ga.group_name
            ]]>
	  </sql>
	</sqlQuery>

	<sqlQuery name="PhyleticPattern">
	  <column name="group_name" />
	  <column name="alveolata_actual" />
	  <column name="alveolata_total" />
	  <column name="alveolata_percent" />
	  <column name="archaea_actual" />
	  <column name="archaea_total" />
	  <column name="archaea_percent" />
	  <column name="amoeba_actual" />
	  <column name="amoeba_total" />
	  <column name="amoeba_percent" />
	  <column name="bacteria_actual" />
	  <column name="bacteria_total" />
	  <column name="bacteria_percent" />
	  <column name="fungi_actual" />
	  <column name="fungi_total" />
	  <column name="fungi_percent" />
	  <column name="euglenozoa_actual" />
	  <column name="euglenozoa_total" />
	  <column name="euglenozoa_percent" />
	  <column name="metazoa_actual" />
	  <column name="metazoa_total" />
	  <column name="metazoa_percent" />
	  <column name="viridiplantae_actual" />
	  <column name="viridiplantae_total" />
	  <column name="viridiplantae_percent" />
	  <column name="other_eukaryotes_actual" />
	  <column name="other_eukaryotes_total" />
	  <column name="other_eukaryotes_percent" />
	  <column name="bacteria_firm_actual" />
	  <column name="bacteria_firm_total" />
	  <column name="bacteria_proa_actual" />
	  <column name="bacteria_proa_total" />
	  <column name="bacteria_prob_actual" />
	  <column name="bacteria_prob_total" />
	  <column name="bacteria_prod_actual" />
	  <column name="bacteria_prod_total" />
	  <column name="bacteria_proe_actual" />
	  <column name="bacteria_proe_total" />
	  <column name="bacteria_prog_actual" />
	  <column name="bacteria_prog_total" />
	  <column name="bacteria_obac_actual" />
	  <column name="bacteria_obac_total" />
	  <column name="archaea_arch_actual" />
	  <column name="archaea_arch_total" />
	  <column name="archaea_eury_actual" />
	  <column name="archaea_eury_total" />
	  <column name="archaea_cren_actual" />
	  <column name="archaea_cren_total" />
	  <column name="archaea_nano_actual" />
	  <column name="archaea_nano_total" />
	  <column name="archaea_kora_actual" />
	  <column name="archaea_kora_total" />
	  <!--<column name="oeuk_genera_html" />-->
	  <!--<column name="eugl_genera_html" />-->
	  <!--<column name="amoe_genera_html" />-->
	  <column name="alveolata_alve_actual" />
	  <column name="alveolata_alve_total" />
	  <column name="alveolata_cili_actual" />
	  <column name="alveolata_cili_total" />
	  <column name="alveolata_apic_actual" />
	  <column name="alveolata_apic_total" />
	  <column name="alveolata_cocc_actual" />
	  <column name="alveolata_cocc_total" />
	  <column name="alveolata_haem_actual" />
	  <column name="alveolata_haem_total" />
	  <column name="alveolata_piro_actual" />
	  <column name="alveolata_piro_total" />
	  <column name="viridiplantae_stre_actual" />
	  <column name="viridiplantae_stre_total" />
	  <column name="viridiplantae_chlo_actual" />
	  <column name="viridiplantae_chlo_total" />
	  <column name="viridiplantae_rhod_actual" />
	  <column name="viridiplantae_rhod_total" />
	  <column name="viridiplantae_cryp_actual" />
	  <column name="viridiplantae_cryp_total" />
	  <column name="fungi_fung_actual" />
	  <column name="fungi_fung_total" />
	  <column name="fungi_micr_actual" />
	  <column name="fungi_micr_total" />
	  <column name="fungi_basi_actual" />
	  <column name="fungi_basi_total" />
	  <column name="fungi_asco_actual" />
	  <column name="fungi_asco_total" />
	  <column name="fungi_muco_actual" />
	  <column name="fungi_muco_total" />
	  <column name="fungi_chyt_actual" />
	  <column name="fungi_chyt_total" />
	  <column name="metazoa_omet_actual" />
	  <column name="metazoa_omet_total" />
	  <column name="metazoa_nema_actual" />
	  <column name="metazoa_nema_total" />
	  <column name="metazoa_arth_actual" />
	  <column name="metazoa_arth_total" />
	  <column name="metazoa_chor_actual" />
	  <column name="metazoa_chor_total" />
	  <column name="metazoa_acti_actual" />
	  <column name="metazoa_acti_total" />
	  <column name="metazoa_aves_actual" />
	  <column name="metazoa_aves_total" />
	  <column name="metazoa_mamm_actual" />
	  <column name="metazoa_mamm_total" />
	  <column name="metazoa_tuni_actual" />
	  <column name="metazoa_tuni_total" />
	  <sql>
            <![CDATA[
SELECT group_name,
       alveolata_actual,alveolata_total,alveolata_percent,archaea_actual,archaea_total,archaea_percent,
       amoeba_actual,amoeba_total,amoeba_percent,bacteria_actual,bacteria_total,bacteria_percent,
       fungi_actual,fungi_total,fungi_percent,euglenozoa_actual,euglenozoa_total,euglenozoa_percent,
       metazoa_actual,metazoa_total,metazoa_percent,viridiplantae_actual,viridiplantae_total,viridiplantae_percent,
       other_eukaryotes_actual,other_eukaryotes_total,other_eukaryotes_percent,
       bacteria_firm_actual, bacteria_firm_total, bacteria_proa_actual, bacteria_proa_total,
       bacteria_prob_actual, bacteria_prob_total, bacteria_prod_actual, bacteria_prod_total,
       bacteria_proe_actual,bacteria_proe_total, bacteria_prog_actual, bacteria_prog_total,
       bacteria_obac_actual, bacteria_obac_total, archaea_arch_actual, archaea_arch_total,
       archaea_eury_actual, archaea_eury_total, archaea_cren_actual, archaea_cren_total,
       archaea_nano_actual, archaea_nano_total, archaea_kora_actual, archaea_kora_total,
       alveolata_alve_actual, alveolata_alve_total, alveolata_cili_actual,
       alveolata_cili_total, alveolata_apic_actual, alveolata_apic_total, alveolata_cocc_actual,
       alveolata_cocc_total, alveolata_haem_actual, alveolata_haem_total, alveolata_piro_actual,
       alveolata_piro_total, viridiplantae_stre_actual, viridiplantae_stre_total,
       viridiplantae_chlo_actual, viridiplantae_chlo_total, viridiplantae_rhod_actual,
       viridiplantae_rhod_total, viridiplantae_cryp_actual, viridiplantae_cryp_total,
       fungi_fung_actual, fungi_fung_total, fungi_micr_actual, fungi_micr_total,
       fungi_basi_actual, fungi_basi_total, fungi_asco_actual, fungi_asco_total,
       fungi_muco_actual, fungi_muco_total, fungi_chyt_actual, fungi_chyt_total,
       metazoa_omet_actual, metazoa_omet_total, metazoa_nema_actual, metazoa_nema_total,
       metazoa_arth_actual, metazoa_arth_total, metazoa_chor_actual, metazoa_chor_total,
       metazoa_acti_actual, metazoa_acti_total, metazoa_aves_actual, metazoa_aves_total,
       metazoa_mamm_actual, metazoa_mamm_total, metazoa_tuni_actual, metazoa_tuni_total
FROM apidbtuning.PhyleticPattern
            ]]>
	  </sql>
	</sqlQuery>

    </querySet>

    <!-- 
    Group Table Queries                                     
    -->

    <querySet name="GroupTables" queryType="table"  isCacheable="false">

      <defaultTestParamValues>
            <paramValue name="group_name">OG7_0008348</paramValue>
      </defaultTestParamValues>

      <sqlQuery name="previousGroups">
        <column name="group_name"/>
        <column name="group_id"/>
        <sql>
           <![CDATA[
SELECT old_group_id AS group_id, new_group_id AS group_name
FROM apidb.groupmapping
WHERE new_group_id <> old_group_id
ORDER BY old_group_id DESC
          ]]>
        </sql>
      </sqlQuery>



      <sqlQuery name="TaxonCounts">
        <column name="group_name"/>
        <column name="taxon_id"/>
        <column name="abbrev"/>
        <column name="count"/>
        <sql>
          <![CDATA[
SELECT sa.group_name, 
       og.taxon_id AS taxon_id, 
       og.orthomcl_abbrev AS abbrev, 
       count(*) AS count
FROM ApidbTuning.SequenceAttributes sa
JOIN apidb.organism og ON sa.orthomcl_taxon_id = og.taxon_id
GROUP BY sa.group_name, og.taxon_id, og.orthomcl_abbrev
          ]]>
        </sql>
      </sqlQuery>

        <sqlQuery name="Statistics">
            <column name="group_name"/>
            <column name="group_type"/>
            <column name="number_of_members"/>
            <column name="avg_percent_identity"/>
            <column name="number_of_match_pairs"/>
            <column name="max_match_pairs"/>
            <column name="percent_match_pairs"/>
            <column name="avg_percent_match"/>
            <column name="evalue"/>
            <column name="evalue_display"/>
            <column name="avg_connectivity"/>
            <sql>
            <![CDATA[
SELECT
    name AS group_name,
    number_of_members,
    number_of_match_pairs,
    CASE
        WHEN avg_percent_identity IS NULL THEN ''
        ELSE ROUND(avg_percent_identity::numeric, 1)::TEXT
    END AS avg_percent_identity,
    CASE
        WHEN percent_match_pairs IS NULL THEN ''
        ELSE ROUND(percent_match_pairs::numeric, 1)::TEXT
    END AS percent_match_pairs,
    number_of_members * (number_of_members - 1) / 2 AS max_match_pairs,
    CASE
        WHEN avg_percent_match IS NULL THEN ''
        ELSE ROUND(avg_percent_match::numeric, 1)::TEXT
    END AS avg_percent_match,
    CASE
        WHEN avg_connectivity IS NULL THEN ''
        ELSE ROUND(100 * avg_connectivity::numeric / (number_of_members::numeric - 1), 1)::TEXT
    END AS avg_connectivity,
    CASE
        WHEN number_of_members = 1 THEN 1
			]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="Proteins">
            <column name="core_peripheral"/>
            <column name="group_name"/>
            <column name="full_id"/>
            <column name="organism_name"/>
            <column name="taxon_group"/>
            <column name="taxon_abbrev"/>
            <column name="length"/>
            <!--
            <column name="previous_groups"/>
            -->
            <column name="description"/>
            <column name="ec_numbers"/>
            <sql>
              <![CDATA[
SELECT
    CASE
        WHEN sa.core_peripheral = 'C' THEN 'Core'
        WHEN sa.core_peripheral = 'P' THEN 'Peripheral'
        ELSE ''
    END AS core_peripheral,
    sa.group_name,
    sa.full_id,
    sa.organism_name,
    sa.taxon_abbreviation AS taxon_abbrev,
    sa.taxon_group,
    sa.length,
    sa.product AS description,
    sec.ec_numbers
FROM
    ApidbTuning.SequenceAttributes sa
LEFT JOIN (
    SELECT
        full_id,
        STRING_AGG(ec_number, ', ' ORDER BY ec_number) AS ec_numbers
    FROM
        apidbtuning.sequenceenzymeclass
    GROUP BY
        full_id
) sec ON sa.full_id = sec.full_id
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="PFams">
          <column name="group_name"/>
          <column name="accession"/>
          <column name="description"/>
          <column name="num_proteins"/>
          <column name="domain_index"/>
          <column name="max_index"/>
          <sql>
            <![CDATA[
SELECT * 
FROM (
    SELECT group_name, 
           accession, 
           description, 
           domain_index, 
           COUNT(DISTINCT full_id) AS num_proteins, 
           (SELECT MAX(domain_index) FROM ApidbTuning.DomainAssignment) AS max_index
    FROM ApidbTuning.DomainAssignment
    GROUP BY group_name, accession, description, domain_index
) subquery
ORDER BY num_proteins DESC
            ]]>
          </sql>
        </sqlQuery>


        <sqlQuery name="ProteinPFams">
          <column name="group_name"/>
          <column name="accession"/>
          <column name="full_id"/>
          <column name="protein_length"/>
          <column name="taxon_name"/>
          <column name="core_peripheral"/>
          <column name="domain_index"/>
          <column name="start_min"/>
          <column name="end_max"/>
          <sql>
<!-- The ProteinPFams query did not work correctly on the website because of the SQL wrapped around it.
     The minimum of all lengths was shown for each protein. The original phrase that resulted in this
     error was sa.length, but the current phrase round(sa.length,0) fixed this in an unknown way.  -->
            <![CDATA[
SELECT sa.group_name, 
       sa.full_id, 
       ROUND(sa.length::numeric, 0) AS protein_length, 
       sa.organism_name AS taxon_name, 
       CASE 
           WHEN sa.core_peripheral = 'C' THEN 'Core' 
           WHEN sa.core_peripheral = 'P' THEN 'Peripheral' 
           ELSE '' 
       END AS core_peripheral, 
       da.accession, 
       da.domain_index, 
       da.start_min, 
       da.end_max
FROM ApidbTuning.SequenceAttributes sa
LEFT OUTER JOIN ApidbTuning.DomainAssignment da 
    ON da.full_id = sa.full_id
ORDER BY sa.full_id, da.start_min
            ]]>
          </sql>
        </sqlQuery>

        <sqlQuery name="EcNumber">
          <column name="group_name"/>
          <column name="ec_number"/>
          <column name="description"/>
          <column name="sequence_count"/>
          <sql>
            <![CDATA[
SELECT sec.group_name,
       sec.ec_number,
       sec.description,
       COUNT(*) AS sequence_count
FROM apidbtuning.sequenceenzymeclass sec
GROUP BY sec.group_name, sec.ec_number, sec.description
ORDER BY sequence_count DESC
            ]]>
          </sql>
        </sqlQuery>

	<sqlQuery name="SimilarGroup">
	  <column name="group_name" />
	  <column name="similar_group" />
	  <column name="protein_count" />
	  <column name="keyword" />
	  <column name="pfam" />
	  <column name="evalue" />

	  <sql>
SELECT 
    og.group_id AS group_name, 
    sog.similar_group_id AS similar_group,  
    groupProteinCount.protein_count AS protein_count, 
    verbiage.keywords AS keyword, 
    domains.pfam, 
    evalue
FROM 
    apidb.SimilarOrthologGroup sog
JOIN 
    apidb.orthologgroup og ON og.group_id = sog.group_id
JOIN 
    (SELECT 
        ogas.group_id, 
        COUNT(ogas.aa_sequence_id) AS protein_count
     FROM 
        apidb.orthologgroupaasequence ogas
     GROUP BY 
        ogas.group_id) groupProteinCount ON sog.similar_group_id = groupProteinCount.group_id
JOIN 
    (SELECT 
        ortholog_group_id, 
        string_agg(keyword, '; ' ORDER BY CAST(frequency AS NUMERIC) DESC) AS keywords
     FROM 
        apidb.OrthomclGroupKeyword
     GROUP BY 
        ortholog_group_id) verbiage ON sog.similar_group_id = verbiage.ortholog_group_id
JOIN 
    (SELECT 
        group_name, 
        string_agg(DISTINCT accession, ', ') AS pfam
     FROM 
        ApidbTuning.DomainAssignment
     GROUP BY 
        group_name) domains ON sog.similar_group_id = domains.group_name
ORDER BY 
    evalue ASC
      	  </sql>
	</sqlQuery>

	<sqlQuery name="GroupStat">
	  <column name="group_name" />
	  <column name="group_type" />
	  <column name="min" />
	  <column name="twentyfive" />
	  <column name="median" />
	  <column name="seventyfive" />
	  <column name="max" />
	  <sql>
SELECT DISTINCT 
    ogs.group_id AS group_name, 
    min.min AS min, 
    twentyfive.twentyfive AS twentyfive, 
    median.median AS median, 
    seventyfive.seventyfive AS seventyfive, 
    max.max AS max,                 
    CASE 
        WHEN ogs.protein_subset = 'C' THEN 'Core only' 
        WHEN ogs.protein_subset = 'C+P' THEN 'Core+Peripheral' 
        WHEN ogs.protein_subset = 'R' THEN 'Peripheral only' 
        ELSE '' 
    END AS group_type
FROM 
    apidb.orthologgroupstats ogs
INNER JOIN 
    (SELECT 
        ogsa.group_id, 
        ogsa.protein_subset, 
        ogsa.evalue AS min
     FROM 
        apidb.orthologgroupstats ogsa
     WHERE 
        ogsa.stat_type = 'min') min
    ON ogs.group_id = min.group_id
    AND ogs.protein_subset = min.protein_subset
INNER JOIN 
    (SELECT 
        ogsb.group_id, 
        ogsb.protein_subset, 
        ogsb.evalue AS twentyfive
     FROM 
        apidb.orthologgroupstats ogsb
     WHERE 
        ogsb.stat_type = '25 PCT') twentyfive
    ON ogs.group_id = twentyfive.group_id
    AND ogs.protein_subset = twentyfive.protein_subset
INNER JOIN 
    (SELECT 
        ogsc.group_id, 
        ogsc.protein_subset, 
        ogsc.evalue AS median
     FROM 
        apidb.orthologgroupstats ogsc
     WHERE 
        ogsc.stat_type = 'median') median
    ON ogs.group_id = median.group_id
    AND ogs.protein_subset = median.protein_subset
INNER JOIN 
    (SELECT 
        ogsd.group_id, 
        ogsd.protein_subset, 
        ogsd.evalue AS seventyfive
     FROM 
        apidb.orthologgroupstats ogsd
     WHERE 
        ogsd.stat_type = '75 PCT') seventyfive
    ON ogs.group_id = seventyfive.group_id
    AND ogs.protein_subset = seventyfive.protein_subset
INNER JOIN 
    (SELECT 
        ogse.group_id, 
        ogse.protein_subset, 
        ogse.evalue AS max
     FROM 
        apidb.orthologgroupstats ogse
     WHERE 
        ogse.stat_type = 'max') max
    ON ogs.group_id = max.group_id
    AND ogs.protein_subset = max.protein_subset
      	  </sql>
	</sqlQuery>

        <sqlQuery name="GroupName">
          <column name="group_name"/>
          <column name="name_string"/>

          <sql>
            <![CDATA[
              select group_id as group_name, group_id as name_string
              from apidb.OrthologGroup
            ]]>
          </sql>
        </sqlQuery>


        <sqlQuery name="KeywordFrequency">
          <column name="group_name" />
          <column name="keyword" />
          <column name="frequency" />
          <sql>
            <![CDATA[
              select og.group_id as group_name, k.keyword, k.frequency
              from apidb.OrthologGroup og, apidb.OrthomclGroupKeyword k
              WHERE og.group_id = k.ortholog_group_id
            ]]>
          </sql>
        </sqlQuery>

        <sqlQuery name="DomainFrequency">
          <column name="group_name" />
          <column name="keyword" />
          <column name="frequency" />
          <sql>
            <![CDATA[
SELECT og.group_id AS group_name, d.description AS keyword, d.frequency
FROM apidb.OrthologGroup og
INNER JOIN apidb.OrthomclGroupDomain d ON og.ortholog_group_id = d.ortholog_group_id
            ]]>
          </sql>
        </sqlQuery>


        <sqlQuery name="PhyleticDistributionCounts">
              <column name="group_name" />
	      <column name="alveolata_actual"  />
	      <column name="alveolata_total"  />
	      <column name="alveolata_percent"  />
	      <column name="archaea_actual"  />
	      <column name="archaea_total"  />
	      <column name="archaea_percent"  />
	      <column name="amoeba_actual"  />
	      <column name="amoeba_total"  />
	      <column name="amoeba_percent"  />
	      <column name="bacteria_actual"  />
	      <column name="bacteria_total"  />
	      <column name="bacteria_percent"  />
	      <column name="fungi_actual"  />
	      <column name="fungi_total"  />
	      <column name="fungi_percent"  />
	      <column name="euglenozoa_actual"  />
	      <column name="euglenozoa_total"  />
	      <column name="euglenozoa_percent"  />
	      <column name="metazoa_actual"  />
	      <column name="metazoa_total"  />
	      <column name="metazoa_percent"  />
	      <column name="viridiplantae_actual"  />
	      <column name="viridiplantae_total"  />
	      <column name="viridiplantae_percent"  />
	      <column name="other_eukaryotes_actual"  />
	      <column name="other_eukaryotes_total"  />
	      <column name="other_eukaryotes_percent"  />
          <sql>
            <![CDATA[
     SELECT group_name,
       alveolata_actual,alveolata_total,alveolata_percent,archaea_actual,archaea_total,archaea_percent,
       amoeba_actual,amoeba_total,amoeba_percent,bacteria_actual,bacteria_total,bacteria_percent,
       fungi_actual,fungi_total,fungi_percent,euglenozoa_actual,euglenozoa_total,euglenozoa_percent,
       metazoa_actual,metazoa_total,metazoa_percent,viridiplantae_actual,viridiplantae_total,viridiplantae_percent,
       other_eukaryotes_actual,other_eukaryotes_total,other_eukaryotes_percent
     FROM apidbtuning.PhyleticPattern
            ]]>
          </sql>
        </sqlQuery>

    </querySet>
</wdkModel>
